using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Security.Cryptography.X509Certificates;
using app.core.data.common.contract;
using app.core.data.common.core;
using app.core.data.common.core.relation;

namespace app.core.data.common.builder.contract
{
    public interface IDatabaseSourceTypeHandler
    {
        List<string> SpListCache { get; set; } 
        string DatabaseUnit { get; set; }
        String ConnectionString { get; set; }
        string[] IgnoreTablePrefixes { get; set; }
        bool AutoGenerateCrudSql { get; set; }
        bool ForceUseOfExistingSp { get; set; }
        bool IgnoreForeignRelationship { get; set; }
        bool AuditCrudEnabled { get; set; }
        IEntity ExecuteUniqueSp<TIEntity>(List<SqlParameter> param, string selectQuery);
        List<IEntity> ExecuteSp<TDto>(List<SqlParameter> param, string selectQuery);
        T ExecuteNonQuery<T>(string query, List<SqlParameter> sqlParameters);

        string AutoGenerateSelectByIdQuery<TId>(string entity, string primaryKeyColumn, TId idValue);
        string AutoGenerateSelectAllQuery(string entity);
        string AutoGenerateUpdateQuery(string schema, IDictionary<string, object> data, string primaryKeyColumnName, string primaryKeyColumnValue);
        string AutoGenerateDeleteQuery(string schema, string primaryKeyColumnName, string primaryKeyColumnValue);
        string AutoGenerateCreateQuery(string schema, IDictionary<string, object> data);
    }
}
