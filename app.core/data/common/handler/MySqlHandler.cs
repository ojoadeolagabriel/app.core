using System.Collections.Generic;
using System.Data.SqlClient;
using app.core.data.common.builder.contract;

namespace app.core.data.common.handler
{
    public class MySqlHandler : IDatabaseSourceTypeHandler
    {
        public List<string> SpListCache { get; set; }
        public string DatabaseUnit { get; set; }
        public string ConnectionString { get; set; }
        public string[] IgnoreTablePrefixes { get; set; }
        public bool AutoGenerateCrudSql { get; set; }
        public bool ForceUseOfExistingSp { get; set; }
        public bool IgnoreForeignRelationship { get; set; }
        public bool AuditCrudEnabled { get; set; }

        public IEntity ExecuteUniqueSp<TIEntity>(List<SqlParameter> param, string selectQuery)
        {
            throw new System.NotImplementedException();
        }

        public List<IEntity> ExecuteSp<TDto>(List<SqlParameter> param, string selectQuery)
        {
            throw new System.NotImplementedException();
        }

        public T ExecuteNonQuery<T>(string query, List<SqlParameter> sqlParameters)
        {
            throw new System.NotImplementedException();
        }

        public string AutoGenerateSelectByIdQuery<TId>(string entity, string primaryKeyColumn, TId idValue)
        {
            throw new System.NotImplementedException();
        }

        public string AutoGenerateSelectAllQuery(string entity)
        {
            throw new System.NotImplementedException();
        }

        public string AutoGenerateUpdateQuery(string schema, IDictionary<string, object> data, string primaryKeyColumnName,
            string primaryKeyColumnValue)
        {
            throw new System.NotImplementedException();
        }

        public string AutoGenerateDeleteQuery(string schema, string primaryKeyColumnName, string primaryKeyColumnValue)
        {
            throw new System.NotImplementedException();
        }

        public string AutoGenerateCreateQuery(string schema, IDictionary<string, object> data)
        {
            throw new System.NotImplementedException();
        }
    }
}
